<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <title>Proxy UI</title>
    <style>
      .loading-view {
        position: fixed;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        background: rgba(255,255,255,.4);
        z-index: 9999;
      }
      .loading-view::after {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        height: 24px;
        width: 24px;
        margin: -12px 0 0 -12px;
        border: 2px solid #fff;
        border-right-color: #409EFF;
        border-top-color: #409EFF;
        border-radius: 50%;
        animation: spin 1000ms infinite linear;
      }
      @keyframes spin {
        from {
          transform: rotate(0deg);
        }
        to {
          transform: rotate(359deg);
        }
      }
    </style>
    <% if (htmlWebpackPlugin.options.nodeModules) { %>
    <!-- Add `node_modules/` to global paths so `require` works properly in development -->
    <script>
      require('module').globalPaths.push('<%= htmlWebpackPlugin.options.nodeModules.replace(/\\/g, '\\\\') %>')
    </script>
    <% } %>
  </head>
  <body>
    <div id="app">
    </div>
    <div class="loading-view">
    </div>
    <!-- Set `__static` path to static files in production -->
    <% if (!process.browser) { %>
    <script>
      if (process.env.NODE_ENV !== "development")
        window.__static = require("path")
          .join(__dirname, "/static")
          .replace(/\\/g, "\\\\");

      const electron = require("electron");
      const remote = electron.remote;
      const ipcRenderer = electron.ipcRenderer;
      const shell = electron.shell;
      const dialog = remote.dialog;
      const proxyApi = remote.require("./proxy-api").default;
      const gDataStore = remote.getGlobal('gDataStore')

      // only explose these variable
      global.proxyApi = proxyApi;
      global.ipcRenderer = ipcRenderer;
      global.shell = shell;
      global.dialog = dialog;
      global.gDataStore = gDataStore;
    </script>
    <% } %>

    <!-- webpack builds are automatically injected -->
  </body>
</html>
